import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title='–≠–Ω–µ—Ä–≥–∏—è –º–∏—Ä–∞', layout='wide')
st.title('–ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏')

st.markdown('''
–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥, –æ—Ç–æ–±—Ä–∞–∂–∞—é—â–∏–π –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º, –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º –∏ –≥–æ–¥–∞–º.  
–í—ã –º–æ–∂–µ—Ç–µ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω—ã, –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –∏ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –Ω–∞ –¥—É—à—É –Ω–∞—Å–µ–ª–µ–Ω–∏—è.
''')

@st.cache_data
def load_data():
    # url = 'https://raw.githubusercontent.com/owid/energy-data/master/owid-energy-data.csv'
    df = pd.read_csv("owid-energy-data.csv")
    # df = pd.read_csv(url)
    df = df[df['year'] >= 1990]
    return df

df = load_data()

# –§–∏–ª—å—Ç—Ä—ã 
with st.sidebar:
    st.header('üîß –§–∏–ª—å—Ç—Ä—ã')
    countries = sorted(df['country'].dropna().unique())
    selected_countries = st.multiselect('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É(—ã)', countries, default=['Russia', 'United States', 'China'])
    selected_years = st.slider('–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –ª–µ—Ç', 1990, 2022, (2000, 2022), step=1)

# –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —ç–Ω–µ—Ä–≥–∏–∏
energy_sources = {
    '–û–±—â–µ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ': 'primary_energy_consumption',
    '–°–æ–ª–Ω–µ—á–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è': 'solar_consumption',
    '–í–µ—Ç—Ä–æ–≤–∞—è —ç–Ω–µ—Ä–≥–∏—è': 'wind_consumption',
    '–£–≥–æ–ª—å': 'coal_consumption',
    '–ì–∞–∑': 'gas_consumption',
    '–Ø–¥–µ—Ä–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è': 'nuclear_consumption',
    '–ì–∏–¥—Ä–æ—ç–Ω–µ—Ä–≥–∏—è': 'hydro_consumption'
}

filtered_df = df[
    (df['country'].isin(selected_countries)) &
    (df['year'].between(*selected_years))
]

# –í–∫–ª–∞–¥–∫–∏ 
tabs = st.tabs(list(energy_sources.keys()) + ['–ù–∞ –¥—É—à—É –Ω–∞—Å–µ–ª–µ–Ω–∏—è', '–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è'])

# –ì—Ä–∞—Ñ–∏–∫–∏ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º 
for tab, (label, column_name) in zip(tabs[:len(energy_sources)], energy_sources.items()):
    with tab:
        st.subheader(f'{label}')
        fig = px.line(
            filtered_df,
            x='year',
            y=column_name,
            color='country',
            labels={'year': '–ì–æ–¥', column_name: 'TWh', 'country': '–°—Ç—Ä–∞–Ω–∞'},
            title=f'{label} —Å {selected_years[0]} –ø–æ {selected_years[1]}'
        )
        fig.update_layout(height=500, template='plotly_white')
        st.plotly_chart(fig, use_container_width=True)

# –ù–∞ –¥—É—à—É –Ω–∞—Å–µ–ª–µ–Ω–∏—è
with tabs[-2]:
    st.subheader('–ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –Ω–∞ –¥—É—à—É –Ω–∞—Å–µ–ª–µ–Ω–∏—è')
    df_pp = df[df['year'].between(*selected_years)]
    df_pp['per_capita'] = df_pp['primary_energy_consumption'] / df_pp['population']
    filtered_pp = df_pp[df_pp['country'].isin(selected_countries)]

    fig = px.line(
        filtered_pp,
        x='year',
        y='per_capita',
        color='country',
        labels={'year': '–ì–æ–¥', 'per_capita': 'TWh –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞', 'country': '–°—Ç—Ä–∞–Ω–∞'},
        title='–ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ –Ω–∞ –¥—É—à—É –Ω–∞—Å–µ–ª–µ–Ω–∏—è'
    )
    fig.update_layout(height=500, template='plotly_white')
    st.plotly_chart(fig, use_container_width=True)

#–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è
with tabs[-1]:
    st.subheader('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏')
    selected_country = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É', selected_countries)
    structure_year = selected_years[1]
    country_data = df[(df['country'] == selected_country) & (df['year'] == structure_year)]

    if not country_data.empty:
        values = [country_data[source].values[0] for source in list(energy_sources.values())[1:]]
        labels = list(energy_sources.keys())[1:]
        fig = px.pie(
            names=labels,
            values=values,
            title=f'–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏ –≤ {selected_country} ({structure_year})',
            hole=0.4
        )
        fig.update_layout(height=500)
        st.plotly_chart(fig, use_container_width=False)
    else:
        st.warning('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã –∏ –≥–æ–¥–∞.')

# –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º–∞—è —ç–Ω–µ—Ä–≥–∏—è
st.markdown('---')
st.subheader('–î–æ–ª—è —Å–æ–ª–Ω–µ—á–Ω–æ–π –∏ –≤–µ—Ç—Ä–æ–≤–æ–π —ç–Ω–µ—Ä–≥–∏–∏')

for country in selected_countries:
    country_data = df[(df['country'] == country) & (df['year'] == selected_years[1])]
    if not country_data.empty:
        total = country_data['primary_energy_consumption'].values[0]
        solar = country_data['solar_consumption'].values[0]
        wind = country_data['wind_consumption'].values[0]
        renewable = solar + wind
        percent = (renewable / total * 100) if total > 0 else 0

        st.markdown(f'–í **{country}** –≤ **{selected_years[1]}** –≥–æ–¥—É –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Å–æ—Å—Ç–∞–≤–∏–ª–∏ **{percent:.2f}%** –æ—Ç –æ–±—â–µ–≥–æ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è.')

# –ö–∞—Ä—Ç–∞ 
st.markdown('---')
st.subheader('–ö–∞—Ä—Ç–∞ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º')

map_year = selected_years[1]
map_data = df[df['year'] == map_year][['country', 'iso_code', 'primary_energy_consumption']].dropna()

fig_map = px.choropleth(
    map_data,
    locations='iso_code',
    color='primary_energy_consumption',
    hover_name='country',
    color_continuous_scale='YlOrRd',
    title=f'–û–±—â–µ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ –≤ {map_year} –≥–æ–¥—É',
    labels={'primary_energy_consumption': 'TWh'}
)

fig_map.update_layout(height=600, geo=dict(showframe=False, showcoastlines=True))
st.plotly_chart(fig_map, use_container_width=True)



